import { CurrentUserQuery_currentUser } from "../CurrentUserQuery.ts";
interface GqlObject<T extends string = string> {
  __typename: T;
}
export const CurrentUser = {
  isUser: (gqlObject: void | object | GqlObject | null | undefined): gqlObject is CurrentUserQuery_currentUser => {
    return !!gqlObject && "__typename" in gqlObject && gqlObject.__typename === "User" && "id" in gqlObject && typeof gqlObject.id === "string" && "firstname" in gqlObject && typeof gqlObject.firstname === "string" && "lastname" in gqlObject && typeof gqlObject.lastname === "string";
  }
};